/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as HomeVideosImport } from './routes/home/videos'
import { Route as HomeTweetsImport } from './routes/home/tweets'
import { Route as HomeTagsImport } from './routes/home/tags'
import { Route as HomeLinksImport } from './routes/home/links'
import { Route as HomeDocumentsImport } from './routes/home/documents'
import { Route as AuthLoginImport } from './routes/auth/login'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HomeVideosRoute = HomeVideosImport.update({
  id: '/home/videos',
  path: '/home/videos',
  getParentRoute: () => rootRoute,
} as any)

const HomeTweetsRoute = HomeTweetsImport.update({
  id: '/home/tweets',
  path: '/home/tweets',
  getParentRoute: () => rootRoute,
} as any)

const HomeTagsRoute = HomeTagsImport.update({
  id: '/home/tags',
  path: '/home/tags',
  getParentRoute: () => rootRoute,
} as any)

const HomeLinksRoute = HomeLinksImport.update({
  id: '/home/links',
  path: '/home/links',
  getParentRoute: () => rootRoute,
} as any)

const HomeDocumentsRoute = HomeDocumentsImport.update({
  id: '/home/documents',
  path: '/home/documents',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/home/documents': {
      id: '/home/documents'
      path: '/home/documents'
      fullPath: '/home/documents'
      preLoaderRoute: typeof HomeDocumentsImport
      parentRoute: typeof rootRoute
    }
    '/home/links': {
      id: '/home/links'
      path: '/home/links'
      fullPath: '/home/links'
      preLoaderRoute: typeof HomeLinksImport
      parentRoute: typeof rootRoute
    }
    '/home/tags': {
      id: '/home/tags'
      path: '/home/tags'
      fullPath: '/home/tags'
      preLoaderRoute: typeof HomeTagsImport
      parentRoute: typeof rootRoute
    }
    '/home/tweets': {
      id: '/home/tweets'
      path: '/home/tweets'
      fullPath: '/home/tweets'
      preLoaderRoute: typeof HomeTweetsImport
      parentRoute: typeof rootRoute
    }
    '/home/videos': {
      id: '/home/videos'
      path: '/home/videos'
      fullPath: '/home/videos'
      preLoaderRoute: typeof HomeVideosImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/home/documents': typeof HomeDocumentsRoute
  '/home/links': typeof HomeLinksRoute
  '/home/tags': typeof HomeTagsRoute
  '/home/tweets': typeof HomeTweetsRoute
  '/home/videos': typeof HomeVideosRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/home/documents': typeof HomeDocumentsRoute
  '/home/links': typeof HomeLinksRoute
  '/home/tags': typeof HomeTagsRoute
  '/home/tweets': typeof HomeTweetsRoute
  '/home/videos': typeof HomeVideosRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/home/documents': typeof HomeDocumentsRoute
  '/home/links': typeof HomeLinksRoute
  '/home/tags': typeof HomeTagsRoute
  '/home/tweets': typeof HomeTweetsRoute
  '/home/videos': typeof HomeVideosRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/login'
    | '/home/documents'
    | '/home/links'
    | '/home/tags'
    | '/home/tweets'
    | '/home/videos'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/home/documents'
    | '/home/links'
    | '/home/tags'
    | '/home/tweets'
    | '/home/videos'
  id:
    | '__root__'
    | '/'
    | '/auth/login'
    | '/home/documents'
    | '/home/links'
    | '/home/tags'
    | '/home/tweets'
    | '/home/videos'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  HomeDocumentsRoute: typeof HomeDocumentsRoute
  HomeLinksRoute: typeof HomeLinksRoute
  HomeTagsRoute: typeof HomeTagsRoute
  HomeTweetsRoute: typeof HomeTweetsRoute
  HomeVideosRoute: typeof HomeVideosRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  HomeDocumentsRoute: HomeDocumentsRoute,
  HomeLinksRoute: HomeLinksRoute,
  HomeTagsRoute: HomeTagsRoute,
  HomeTweetsRoute: HomeTweetsRoute,
  HomeVideosRoute: HomeVideosRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/login",
        "/home/documents",
        "/home/links",
        "/home/tags",
        "/home/tweets",
        "/home/videos"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/home/documents": {
      "filePath": "home/documents.tsx"
    },
    "/home/links": {
      "filePath": "home/links.tsx"
    },
    "/home/tags": {
      "filePath": "home/tags.tsx"
    },
    "/home/tweets": {
      "filePath": "home/tweets.tsx"
    },
    "/home/videos": {
      "filePath": "home/videos.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
